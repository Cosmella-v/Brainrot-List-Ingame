name: Build Geode Mod

on:
  workflow_dispatch:
  push:
    branches:
      - "**"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: Windows
          os: windows-latest

        #- name: macOS
         # os: macos-latest

        #- name: Android32
        #  os: ubuntu-latest
        #  target: Android32

       # - name: Android64
       #   os: ubuntu-latest
         # target: Android64

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v4

    - if: runner.os == 'Linux'
      name: Get APT packages for WebKitGTK
      id: apt-webkitgtk
      run: |
        packages=()
        if [[ "${{ inputs.webkitgtk-api }}" == "6.0" ]]; then
          packages+=(libgtk-4-dev libwebkitgtk-6.0-dev)
        elif [[ "${{ inputs.webkitgtk-api }}" == "4.1" ]]; then
          packages+=(libgtk-3-dev libwebkit2gtk-4.1-dev)
        elif [[ "${{ inputs.webkitgtk-api }}" == "4.0" ]]; then
          packages+=(libgtk-3-dev libwebkit2gtk-4.0-dev)
        fi
        echo "packages=${packages[@]}" >> "${GITHUB_OUTPUT}"
      shell: bash

    - if: runner.os == 'Linux'
      name: Install packages (APT)
      run: |
        packages=(${{ inputs.apt }} ${{ steps.apt-webkitgtk.outputs.packages }})
        sudo apt-get update
        sudo apt-get install --no-install-recommends -y \
          cmake \
          doxygen \
          graphviz \
          ninja-build \
          python3 \
          python3-lxml \
          python3-markupsafe \
          python3-pip \
          xvfb \
          "${packages[@]}"
      shell: bash

    - if: runner.os == 'Windows' && inputs.msys != ''
      name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ inputs.msys }}
        update: false
        install: base-devel
        pacboy: >-
          cmake:p
          ninja:p
          python:p
          python-lxml:p
          python-markupsafe:p
          python-pip:p
          toolchain:p
          ${{ inputs.msys-pacboy }}


      - name: Build the mod
        uses: geode-sdk/build-geode-mod@main
        with:
          bindings: geode-sdk/bindings
          bindings-ref: main
          combine: true
          target: ${{ matrix.config.target }}

  package:
    name: Package builds
    runs-on: ubuntu-latest
    needs: ['build']

    steps:
      - uses: geode-sdk/build-geode-mod/combine@main
        id: build

      - uses: actions/upload-artifact@v4
        with:
          name: Build Output
          path: ${{ steps.build.outputs.build-output }}
